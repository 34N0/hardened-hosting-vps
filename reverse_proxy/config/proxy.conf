server {
  listen 80;
  listen [::]:80; 
  server_name lexpc.xyz;

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name helloworld.com;

  ssl_certificate /etc/nginx/ssl/fullchain.pem;
  ssl_certificate_key /etc/nginx/ssl/privkey.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
  ssl_prefer_server_ciphers off;

  # hide version
  server_tokens off;

  # mitigate dos by low keepalive
  keepalive_timeout 10;

  # slow http dos by send_timeout between sucessive writes
  send_timeout 10;

  # prevent https downgrade attacks
  add_header Strict-Transport-Security "max-age=15768000;";

  # set client timeouts to mitigate dos attacks
  client_body_timeout 10;
  client_header_timeout 10;

  # set max request size to mitigate buffer overflow attacks
  client_max_body_size 100K;

  # set max size in uri to mitigate BOA using uri parameters
  large_client_header_buffers 2 1k;

  # Block external X-Frames
  add_header X-Frame-Options "SAMEORIGIN";

  # Block response sniffing
  add_header X-Content-Type-Options "nosniff";

  # set x-Xss Protection for Clients without CSP
  add_header X-Xss-Protection "1; mode=block";

  # Mitigate XSS via CSP
  add_header Content-Security-Policy "default-src 'self'";

  # disable referer url in redirects
  add_header Referrer-Policy "no-referrer";

  location / {
    proxy_pass http://helloworld:80;
  }
}
